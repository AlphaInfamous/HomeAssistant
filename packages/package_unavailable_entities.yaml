# ###################################################################################################
# ## Package - Unavailable Entities Sensor
# ## Count and list entities with a state of unavailable or unknown
# ## Home Assistant v2022.5 required. See README for customization options.
# ## https://github.com/jazzyisj/unavailable-entities-sensor/blob/main/README.md
# ###################################################################################################

# template:
#   - sensor:
#       - name: "Unavailable Entities"
#         unique_id: unavailable_entities
#         icon: "{{ iif(states(this.entity_id)|int(0) > 0,'mdi:alert-circle','mdi:check-circle') }}"
#         unit_of_measurement: entities
#         state: >
#           {% set entities = state_attr(this.entity_id,'entity_id') %}
#           {% if entities != none %} {{ entities|count }} {% endif %}
#         attributes:
#           entity_id: >
#             {% set ignore_seconds = 60 %}
#             {% set ignored = state_attr('group.ignored_unavailable_entities','entity_id') %}
#             {% set ignore_ts = (now().timestamp() - ignore_seconds)|as_datetime %}
#             {% set entities = states|rejectattr('domain','eq','group')
#                 |rejectattr('last_changed','ge',ignore_ts)
#                 |rejectattr('last_changed','ge',ignore_ts)
#                 |rejectattr('entity_id','search','browser_')
#                 |rejectattr('entity_id','search','_do_not_disturb')
#                 |rejectattr('entity_id','search','_alarm_volume')
#                 |rejectattr('entity_id','search','_next_alarm')
#                 |rejectattr('entity_id','search','_memory_percent')
#                 |rejectattr('entity_id','search','_cpu_percent')
#                 |rejectattr('entity_id','search','_timers')
#                 |rejectattr('entity_id','search','_alarms')
#                 |rejectattr('entity_id','search','_stars')
#                 |rejectattr('entity_id','search','_watchers')
#                 |rejectattr('entity_id','search','_forks')
#                 |rejectattr('entity_id','search','_issues')
#                 |rejectattr('entity_id','search','pull_requests')
#                 |rejectattr('entity_id','search','_latest_issue')
#                 |rejectattr('entity_id','search','_latest_pull_request')
#                 |rejectattr('entity_id','search','_latest_release')
#                 |rejectattr('entity_id','search','_latest_commit')
#                 |rejectattr('entity_id','search','_latest_tag')
#                 |rejectattr('entity_id','search','_discussions')
#                 |rejectattr('entity_id','search','_latest_discussion')
#                 |rejectattr('entity_id','search','sensor.glances_')
#                 |rejectattr('entity_id','search','_identifybutton')
#                 |rejectattr('entity_id','search','scene.')
#                 |rejectattr('entity_id','search','automation.')
#                 |rejectattr('entity_id','search','_smartenergymetering')
#                 |rejectattr('entity_id','search','_smartenergysummation')
#                 |rejectattr('entity_id','search','_onlevelconfiguration')
#                 |selectattr('state','in',['unavailable','unknown']) %}
#             {% if ignored != none %}
#               {% set entities =  entities|rejectattr('entity_id','in',ignored) %}
#             {% endif %}
#             {{ entities|map(attribute='entity_id')|list }}

# # group:
# #   ignored_unavailable_entities:
# #     entities:
# #       - sensor.my_sensor

# automation:
#   - id: unavailable_entities_notification
#     alias: "Unavailable Entities Notification"
#     description: "Create persistent notification if unavailable entities, dismiss if none."
#     mode: restart
#     trigger:
#       - platform: state
#         entity_id: sensor.unavailable_entities
#     action:
#       - if:
#           - condition: numeric_state
#             entity_id: sensor.unavailable_entities
#             above: 0
#         then:
#           - service: persistent_notification.create
#             data:
#               notification_id: unavailable_entities
#               title: "Unavailable Entities"
#               message: >
#                 {% set ns = namespace(result=[]) %}
#                 {% for s in expand(state_attr('sensor.unavailable_entities', 'entity_id')) %}
#                   {% set ns.result = ns.result + [
#                       "**" ~ s.name ~ "**\n"
#                       ~ "- *entity_id*: " ~ s.entity_id ~ "\n"
#                       ~ "- *state*: " ~ s.state ~ "\n"
#                     ]
#                   %}
#                 {% endfor %}
#                 {% set ns.result = ns.result | sort %}
#                 {{ ns.result | join('\n') }}
#           - service: notify.all_personal_devices
#             data:
#               # notification_id: unavailable_entities
#               title: Unavailable Entities
#               message: >
#                 {% set ns = namespace(result=[]) %}
#                 {% for s in expand(state_attr('sensor.unavailable_entities', 'entity_id')) %}
#                   {% set ns.result = ns.result + [
#                       "" ~ s.name ~ "\n"
#                       ~ "entity_id: " ~ s.entity_id ~ "\n"
#                       ~ "state: " ~ s.state ~ "\n"
#                     ]
#                   %}
#                 {% endfor %}
#                 {% set ns.result = ns.result | sort %}
#                 {{ ns.result | join('\n') }}
#         else:
#           - service: persistent_notification.dismiss
#             data:
#               notification_id: unavailable_entities
